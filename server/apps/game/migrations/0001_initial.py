# Generated by Django 5.2.6 on 2025-09-28 19:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AgeGroupModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(verbose_name="название")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CityModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(verbose_name="название")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HintModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="JobSphereModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(verbose_name="название")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(verbose_name="название")),
                ("link", models.URLField(verbose_name="ссылка на продукт")),
            ],
        ),
        migrations.CreateModel(
            name="GenerationModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("seed", models.UUIDField()),
                ("iteration", models.PositiveSmallIntegerField()),
                (
                    "client_gender",
                    models.CharField(
                        choices=[("male", "Мужской"), ("female", "Женский")],
                        max_length=8,
                    ),
                ),
                ("client_is_married", models.BooleanField()),
                ("client_is_have_child", models.BooleanField()),
                ("client_is_have_real_estate", models.BooleanField()),
                (
                    "client_age",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="game.agegroupmodel",
                    ),
                ),
                (
                    "client_city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="game.citymodel"
                    ),
                ),
                (
                    "hint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="game.hintmodel"
                    ),
                ),
                (
                    "client_job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="game.jobspheremodel",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="hintmodel",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="game.productmodel"
            ),
        ),
        migrations.CreateModel(
            name="GenerationAnswerModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_correct", models.BooleanField()),
                (
                    "generation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="game.generationmodel",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="game.productmodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_product_in_answer",
                    models.BooleanField(choices=[(True, "Есть"), (False, "Нет")]),
                ),
                ("text", models.TextField()),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="game.productmodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SituationModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("male_text", models.TextField()),
                ("female_text", models.TextField()),
                (
                    "real_estate_condition",
                    models.BooleanField(
                        choices=[(None, "Не важно"), (True, "Есть"), (False, "Нет")],
                        null=True,
                    ),
                ),
                ("common_products", models.ManyToManyField(to="game.productmodel")),
            ],
        ),
        migrations.CreateModel(
            name="ProductRecommendationConditionModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "children_condition",
                    models.BooleanField(
                        choices=[(None, "Не важно"), (True, "Есть"), (False, "Нет")],
                        null=True,
                    ),
                ),
                (
                    "real_estate_condition",
                    models.BooleanField(
                        choices=[(None, "Не важно"), (True, "Есть"), (False, "Нет")],
                        null=True,
                    ),
                ),
                (
                    "age_group_condition",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game.agegroupmodel",
                    ),
                ),
                (
                    "city_condition",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game.citymodel",
                    ),
                ),
                (
                    "job_sphere_condition",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game.jobspheremodel",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game.productmodel",
                    ),
                ),
                (
                    "situation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conditions",
                        to="game.situationmodel",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="generationmodel",
            name="situation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="game.situationmodel"
            ),
        ),
        migrations.CreateModel(
            name="SpriteModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.FileField(upload_to="sprites")),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Мужской"), ("female", "Женский")],
                        max_length=8,
                    ),
                ),
                (
                    "age_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="game.agegroupmodel",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="generationmodel",
            name="client_sprite",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="game.spritemodel"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="generationmodel",
            unique_together={("seed", "iteration")},
        ),
    ]
